services:
  api:
    image: bdp-registry-api:latest
    build:
      context: .
      dockerfile: src/BDP.Registry.API/Dockerfile
    container_name: bdp-registry-api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=bdp;Username=bdp;Password=bdp-pwd
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:16-alpine
    container_name: bdp-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=bdp
      - POSTGRES_PASSWORD=bdp-pwd
      - POSTGRES_DB=bdp
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bdp -d bdp"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge
